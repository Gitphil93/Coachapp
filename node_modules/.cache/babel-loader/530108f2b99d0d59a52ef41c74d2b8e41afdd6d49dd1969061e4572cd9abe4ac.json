{"ast":null,"code":"var _jsxFileName = \"/Users/unne/Documents/GitHub/Coachapp/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = ({\n  latitude,\n  longitude,\n  sessionDate\n}) => {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = '19c737dffbd944c5114401ce4fb6d57a';\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&dt=${sessionDate}`);\n        if (response.ok) {\n          const data = await response.json();\n          setWeatherData(data);\n        } else {\n          console.error(\"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    if (latitude !== null && longitude !== null && sessionDate) {\n      fetchWeatherData();\n    }\n  }, [latitude, longitude, sessionDate]);\n  const getWeatherEmoji = () => {\n    if (!weatherData || !weatherData.weather || weatherData.weather.length === 0) {\n      return \"\";\n    }\n    const weather = weatherData.weather[0].main.toLowerCase();\n    switch (weather) {\n      case \"clear\":\n        return \"‚òÄÔ∏è\";\n      case \"clouds\":\n        return \"‚òÅÔ∏è\";\n      case \"rain\":\n        return \"üåßÔ∏è\";\n      case \"snow\":\n        return \"‚ùÑÔ∏è\";\n      default:\n        return \"\";\n    }\n  };\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Weather for \", sessionDate, \": \", getWeatherEmoji()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Temperature: \", weatherData.main.temp, \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", weatherData.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Weather","latitude","longitude","sessionDate","_s","weatherData","setWeatherData","API_KEY","fetchWeatherData","response","fetch","ok","data","json","console","error","getWeatherEmoji","weather","length","main","toLowerCase","children","fileName","_jsxFileName","lineNumber","columnNumber","temp","description","_c","$RefreshReg$"],"sources":["/Users/unne/Documents/GitHub/Coachapp/src/components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Weather = ({ latitude, longitude, sessionDate }) => {\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = '19c737dffbd944c5114401ce4fb6d57a';\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&dt=${sessionDate}`\n        );\n        if (response.ok) {\n          const data = await response.json();\n          setWeatherData(data);\n        } else {\n          console.error(\"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n\n    if (latitude !== null && longitude !== null && sessionDate) {\n      fetchWeatherData();\n    }\n  }, [latitude, longitude, sessionDate]);\n\n  const getWeatherEmoji = () => {\n    if (!weatherData || !weatherData.weather || weatherData.weather.length === 0) {\n      return \"\";\n    }\n\n    const weather = weatherData.weather[0].main.toLowerCase();\n    switch (weather) {\n      case \"clear\":\n        return \"‚òÄÔ∏è\";\n      case \"clouds\":\n        return \"‚òÅÔ∏è\";\n      case \"rain\":\n        return \"üåßÔ∏è\";\n      case \"snow\":\n        return \"‚ùÑÔ∏è\";\n      default:\n        return \"\";\n    }\n  };\n\n  if (!weatherData) {\n    return <p>Loading weather...</p>;\n  }\n\n  return (\n    <div>\n      <p>Weather for {sessionDate}: {getWeatherEmoji()}</p>\n      <p>Temperature: {weatherData.main.temp}¬∞C</p>\n      <p>Description: {weatherData.weather[0].description}</p>\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}