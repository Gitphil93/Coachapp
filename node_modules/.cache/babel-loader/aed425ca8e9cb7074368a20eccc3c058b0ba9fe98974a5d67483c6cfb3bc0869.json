{"ast":null,"code":"var _jsxFileName = \"/Users/unne/Documents/GitHub/athleteapp/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./styles/Timer.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer({\n  isOpen\n}) {\n  _s();\n  const [time, setTime] = useState(0);\n  const [isRunning, setIsRunning] = useState(false);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning) {\n      intervalId = setInterval(() => {\n        setTime(prevTime => prevTime + 10); // Öka tiden med 10 millisekunder (0.01 sekunder)\n      }, 10); // Uppdatera varje 10 millisekunder (0.01 sekund)\n    }\n    return () => clearInterval(intervalId); // Städa upp intervallet när komponenten avmonteras eller isRunning ändras\n  }, [isRunning]);\n\n  // Beräkna minuter, sekunder, hundradelar och tusendelar av sekunder\n  const minutes = Math.floor(time / (60 * 1000));\n  const seconds = Math.floor(time % (60 * 1000) / 1000);\n  const milliseconds = Math.floor(time % 1000 / 10);\n  const microseconds = time % 10;\n  const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}:${milliseconds.toString().padStart(2, '0')}`;\n  const toggleTimer = () => {\n    setIsRunning(prevIsRunning => !prevIsRunning);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-wrapper\",\n    style: {\n      filter: isOpen ? \"blur(4px) brightness(40%)\" : \"blur(0) brightness(100%)\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Timer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: formattedTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"save-button-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"save-button\",\n        onClick: toggleTimer,\n        children: isRunning ? 'Stoppa tid' : 'Starta tid'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"th9G96ix7qzT0R5Zt2LTZjfttJA=\");\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","isOpen","_s","time","setTime","isRunning","setIsRunning","intervalId","setInterval","prevTime","clearInterval","minutes","Math","floor","seconds","milliseconds","microseconds","formattedTime","toString","padStart","toggleTimer","prevIsRunning","className","style","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/unne/Documents/GitHub/athleteapp/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./styles/Timer.css\";\n\nexport default function Timer({ isOpen }) {\n    const [time, setTime] = useState(0);\n    const [isRunning, setIsRunning] = useState(false);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning) {\n            intervalId = setInterval(() => {\n                setTime(prevTime => prevTime + 10); // Öka tiden med 10 millisekunder (0.01 sekunder)\n            }, 10); // Uppdatera varje 10 millisekunder (0.01 sekund)\n        }\n\n        return () => clearInterval(intervalId); // Städa upp intervallet när komponenten avmonteras eller isRunning ändras\n    }, [isRunning]);\n\n    // Beräkna minuter, sekunder, hundradelar och tusendelar av sekunder\n    const minutes = Math.floor(time / (60 * 1000));\n    const seconds = Math.floor((time % (60 * 1000)) / 1000);\n    const milliseconds = Math.floor((time % 1000) / 10);\n    const microseconds = time % 10;\n\n    const formattedTime = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}:${milliseconds.toString().padStart(2, '0')}`;\n\n    const toggleTimer = () => {\n        setIsRunning(prevIsRunning => !prevIsRunning); \n    };\n\n    return (\n        <div className=\"home-wrapper\" style={{ filter: isOpen ? \"blur(4px) brightness(40%)\" : \"blur(0) brightness(100%)\" }}>\n            <h2>Timer</h2>\n\n            <div className=\"timer\">\n                <h1>{formattedTime}</h1>\n            </div>\n\n            <div className=\"save-button-wrapper\">\n                <button className=\"save-button\" onClick={toggleTimer}>\n                    {isRunning ? 'Stoppa tid' : 'Starta tid'}\n                </button>\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}