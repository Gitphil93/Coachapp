{"ast":null,"code":"var _jsxFileName = \"/Users/unne/Documents/GitHub/Coachapp/src/views/MySessions.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport \"../styles/mySessions.css\";\nimport MenuContext from \"../context/MenuContext.js\";\nimport Header from '../components/Header';\nimport Menu from '../components/Menu';\nimport { jwtDecode } from \"jwt-decode\";\nimport Modal from \"../components/Modal\";\nimport Loader from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MySessions() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [currentExercise, setCurrentExercise] = useState('');\n  const modalRef = useRef();\n  const hamburgerRef = useRef(null);\n  const [allSessions, setAllSessions] = useState([]);\n  const [userUpcomingSessions, setUserUpcomingSessions] = useState([]);\n  const [userPastSessions, setUserPastSessions] = useState([]);\n  const [allUpcomingSessions, setAllUpcomingSessions] = useState([]);\n  const [allPastSessions, setAllPastSessions] = useState([]);\n  const [role, setRole] = useState(0);\n  const [user, setUser] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [expandedContent, setExpandedContent] = useState(null);\n  const {\n    toggleMenu,\n    isMenuOpen,\n    setIsMenuOpen\n  } = useContext(MenuContext);\n  const [comment, setComment] = useState(\"\");\n  const [currentSessionId, setCurrentSessionId] = useState(\"\");\n  const sessionSwipeRefs = useRef([]);\n  const [touchStartX, setTouchStartX] = useState(0);\n  const [touchEndX, setTouchEndX] = useState(0);\n  const [sessionXValues, setSessionXValues] = useState({});\n  const [sessionToRemoveId, setSessionToRemoveId] = useState('');\n  const openModal = (session, exercise) => {\n    setCurrentSessionId(session._id);\n    setCurrentExercise(exercise);\n    setIsModalOpen(true);\n  };\n  const openDeleteModal = sessionId => {\n    setSessionToRemoveId(sessionId);\n    setIsDeleteModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const closeDeleteModal = () => {\n    setIsDeleteModalOpen(false);\n  };\n  const handleComment = e => {\n    setComment(e.target.value);\n  };\n  const getSessions = async () => {\n    setIsLoading(true);\n    const token = localStorage.getItem(\"token\");\n    const decodedToken = jwtDecode(token);\n    setRole(decodedToken.role);\n    setUser({\n      name: decodedToken.name,\n      lastname: decodedToken.lastname\n    });\n    console.log(decodedToken.email);\n    if (token) {\n      try {\n        const response = await fetch(\"http://192.168.0.36:5000/get-sessions\", {\n          method: \"GET\",\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        const data = await response.json();\n        const sessions = data.sessions;\n        const currentDate = new Date().toISOString().slice(0, 10);\n\n        // Sortera alla sessioner baserat på tid och datum\n        const sortedSessions = sessions.sort((a, b) => {\n          const dateA = new Date(`${a.date}T${a.time}`);\n          const dateB = new Date(`${b.date}T${b.time}`);\n          return dateA - dateB;\n        });\n        setAllSessions(sortedSessions);\n        if (role >= 2000) {\n          setAllUpcomingSessions(sortedSessions.filter(session => session.date >= currentDate));\n          setAllPastSessions(sortedSessions.filter(session => session.date < currentDate));\n        } else {\n          const userSessions = sortedSessions.filter(session => session.attendees.map(attendee => attendee.email).includes(decodedToken.email));\n          console.log(\"userSessions\", userSessions);\n          setUserUpcomingSessions(userSessions.filter(session => session.date >= currentDate));\n          setUserPastSessions(userSessions.filter(session => session.date < currentDate));\n          setAllUpcomingSessions(sortedSessions.filter(session => session.date >= currentDate));\n          setAllPastSessions(sortedSessions.filter(session => session.date < currentDate));\n        }\n      } catch (err) {\n        console.error(\"Couldn't get sessions\", err);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n  useEffect(() => {\n    getSessions();\n  }, [role]);\n  const postComment = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await fetch(`http://192.168.0.36:5000/add-comment/${currentSessionId}/${currentExercise._id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({\n          userComment: comment,\n          author: user.name[0] + user.lastname[0]\n        })\n      });\n      setComment(\"\");\n      closeModal();\n      console.log(response);\n      if (response.ok) {\n        console.log(\"Kommentaren postades framgångsrikt!\");\n        getSessions();\n      } else {\n        console.error(\"Något gick fel när du försökte posta kommentaren.\");\n      }\n    } catch (error) {\n      console.error(\"Ett fel uppstod vid hantering av kommentaren:\", error);\n    }\n  };\n  const deleteSession = async () => {\n    const token = localStorage.getItem(\"token\");\n    try {\n      const response = await fetch(`http://192.168.0.36:5000/delete-session/${sessionToRemoveId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        console.log(\"Passet har tagits bort framgångsrikt!\");\n        // Uppdatera sessions efter borttagning\n        getSessions();\n        setIsDeleteModalOpen(false);\n      } else {\n        console.error(\"Något gick fel när du försökte ta bort passet.\");\n      }\n    } catch (error) {\n      console.error(\"Ett fel uppstod vid hantering av borttagning av passet:\", error);\n    }\n  };\n  const isAnyContentExpanded = () => {\n    console.log(allSessions.some(session => isContentExpanded(session)));\n    return allSessions.some(session => isContentExpanded(session));\n  };\n  const toggleExpandContent = session => {\n    setExpandedContent(prevContent => prevContent === session ? null : session);\n  };\n  const isContentExpanded = session => {\n    return expandedContent === session;\n  };\n  const getDayOfWeek = dateString => {\n    const days = ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag'];\n    const date = new Date(dateString);\n    return days[date.getDay()];\n  };\n  const handleTouchStart = (sessionId, e) => {\n    if (role >= 2000) {\n      setTouchStartX(e.touches[0].clientX);\n    }\n  };\n  const handleTouchMove = (sessionId, e) => {\n    if (role >= 2000) {\n      if (!isAnyContentExpanded(sessionId)) {\n        const deltaX = e.touches[0].clientX - touchStartX;\n        if (deltaX < 0) {\n          setSessionXValues(prevValues => ({\n            ...prevValues,\n            [sessionId]: deltaX\n          }));\n        }\n      }\n    }\n  };\n  const handleTouchEnd = sessionId => {\n    if (role >= 2000) {\n      if (!isAnyContentExpanded(sessionId)) {\n        const deltaX = sessionXValues[sessionId] || 0;\n        if (Math.abs(deltaX) > 200) {\n          openDeleteModal(sessionId);\n        }\n        setSessionXValues(prevValues => ({\n          ...prevValues,\n          [sessionId]: 0\n        }));\n      }\n    }\n  };\n  const calculateSwipeColor = sessionId => {\n    const deltaX = sessionXValues[sessionId] || 0;\n    const maxSwipeDistance = 200;\n    const swipeRatio = Math.min(Math.abs(deltaX) / maxSwipeDistance, 1); // Andel av maximalt avstånd\n    const red = Math.round(255 * swipeRatio);\n    const green = 0;\n    const blue = 0;\n    const alpha = 1;\n    if (Math.abs(deltaX) <= 100) {\n      return 'linear-gradient(to bottom right, rgb(235, 233, 233) 50%, rgb(4, 52, 85))';\n    } else {\n      return `rgba(${red}, ${green}, ${blue}, ${alpha})`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-root\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isModalOpen,\n        onClose: closeModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"modal-h2\",\n              children: currentExercise.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"input-name\",\n              onChange: handleComment,\n              value: comment,\n              placeholder: \"Skriv kommentar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-button\",\n              onClick: postComment,\n              children: \"Kommentera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"modal-root\",\n      children: /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isDeleteModalOpen,\n        onClose: closeDeleteModal,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"\\xC4r du s\\xE4ker p\\xE5 att du vill ta bort passet?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 18\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-delete-button\",\n              onClick: deleteSession,\n              children: \"Ta bort\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onMenuToggle: toggleMenu,\n      hamburgerRef: hamburgerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      isOpen: isMenuOpen,\n      setIsOpen: setIsMenuOpen,\n      hamburgerRef: hamburgerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-wrapper\",\n      style: {\n        filter: isMenuOpen ? \"blur(4px) brightness(40%)\" : \"blur(0) brightness(100%)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"view-header\",\n        children: \"Mina pass\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessions-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Kommande pass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), role >= 2000 ? allUpcomingSessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\"),\n          style: {\n            transform: `translateX(${sessionXValues[session._id]}px)`\n          },\n          onClick: () => toggleExpandContent(session),\n          onTouchStart: e => handleTouchStart(session._id, e),\n          onTouchMove: e => handleTouchMove(session._id, e),\n          onTouchEnd: () => handleTouchEnd(session._id) // Uppdatera sessionens position baserat på sessionX\n          ,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sessions-content\",\n            style: {\n              background: calculateSwipeColor(session._id)\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-top\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\" \", getDayOfWeek(session.date), \" \", session.date, \" \", session.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 37\n            }, this), isContentExpanded(session) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expanded-session-content\",\n              children: session.exercises.map((exercise, exerciseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"exercise-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"exercise-name\",\n                  onClick: e => openModal(session, exercise),\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 41\n                }, this), exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: [userComment.author, \": \", userComment.comment]\n                }, userCommentIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 41\n                }, this))]\n              }, exerciseIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: session.place\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-initials\",\n                children: session.attendees.map((initials, attendeeIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"initials-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    id: \"initials\",\n                    children: initials.name[0] + initials.lastname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 53\n                  }, this)\n                }, attendeeIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 29\n        }, this)) : userUpcomingSessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\"),\n          onClick: () => toggleExpandContent(session),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sessions-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-top\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\" \", getDayOfWeek(session.date), \" \", session.date, \" \", session.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 37\n            }, this), isContentExpanded(session) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expanded-session-content\",\n              children: session.exercises.map((exercise, exerciseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"exercise-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"exercise-name\",\n                  onClick: e => openModal(session, exercise),\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: exercise.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 41\n                }, this), exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: [userComment.author, \": \", userComment.comment]\n                }, userCommentIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 41\n                }, this))]\n              }, exerciseIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: session.place\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-initials\",\n                children: session.attendees.map((initials, attendeeIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"initials-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    id: \"initials\",\n                    children: initials.name[0] + initials.lastname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 53\n                  }, this)\n                }, attendeeIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessions-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessions-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Tidigare pass\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 5\n        }, this), role >= 2000 ? allPastSessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\"),\n          onClick: () => toggleExpandContent(session),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sessions-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-top\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\" \", getDayOfWeek(session.date), \" \", session.date, \" \", session.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 21\n            }, this), isContentExpanded(session) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expanded-session-content\",\n              children: session.exercises.map((exercise, exerciseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"exercise-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"exercise-name\",\n                  onClick: e => openModal(session, exercise),\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: exercise.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 41\n                }, this), exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: [userComment.author, \": \", userComment.comment]\n                }, userCommentIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 41\n                }, this))]\n              }, exerciseIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: session.place\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-initials\",\n                children: session.attendees.map((initials, attendeeIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"initials-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    id: \"initials\",\n                    children: initials.name[0] + initials.lastname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 37\n                  }, this)\n                }, attendeeIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)) : userPastSessions.map((session, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\"),\n          onClick: () => toggleExpandContent(session),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sessions-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-top\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\" \", getDayOfWeek(session.date), \" \", session.date, \" \", session.time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 21\n            }, this), isContentExpanded(session) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expanded-session-content\",\n              children: session.exercises.map((exercise, exerciseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"exercise-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"exercise-name\",\n                  onClick: e => openModal(session, exercise),\n                  children: exercise.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: exercise.comment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 41\n                }, this), exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"exercise-comment\",\n                  children: [userComment.author, \": \", userComment.comment]\n                }, userCommentIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 41\n                }, this))]\n              }, exerciseIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"session-bottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: session.place\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"session-initials\",\n                children: session.attendees.map((initials, attendeeIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"initials-wrapper\",\n                  children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                    id: \"initials\",\n                    children: initials.name[0] + initials.lastname[0]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 37\n                  }, this)\n                }, attendeeIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 448,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n}\n_s(MySessions, \"3197dYxPhBoaNVjSNwrESurPDjY=\");\n_c = MySessions;\nvar _c;\n$RefreshReg$(_c, \"MySessions\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useRef","useLocation","MenuContext","Header","Menu","jwtDecode","Modal","Loader","jsxDEV","_jsxDEV","MySessions","_s","isLoading","setIsLoading","isModalOpen","setIsModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","currentExercise","setCurrentExercise","modalRef","hamburgerRef","allSessions","setAllSessions","userUpcomingSessions","setUserUpcomingSessions","userPastSessions","setUserPastSessions","allUpcomingSessions","setAllUpcomingSessions","allPastSessions","setAllPastSessions","role","setRole","user","setUser","email","setEmail","expandedContent","setExpandedContent","toggleMenu","isMenuOpen","setIsMenuOpen","comment","setComment","currentSessionId","setCurrentSessionId","sessionSwipeRefs","touchStartX","setTouchStartX","touchEndX","setTouchEndX","sessionXValues","setSessionXValues","sessionToRemoveId","setSessionToRemoveId","openModal","session","exercise","_id","openDeleteModal","sessionId","closeModal","closeDeleteModal","handleComment","e","target","value","getSessions","token","localStorage","getItem","decodedToken","name","lastname","console","log","response","fetch","method","headers","Authorization","data","json","sessions","currentDate","Date","toISOString","slice","sortedSessions","sort","a","b","dateA","date","time","dateB","filter","userSessions","attendees","map","attendee","includes","err","error","postComment","body","JSON","stringify","userComment","author","ok","deleteSession","isAnyContentExpanded","some","isContentExpanded","toggleExpandContent","prevContent","getDayOfWeek","dateString","days","getDay","handleTouchStart","touches","clientX","handleTouchMove","deltaX","prevValues","handleTouchEnd","Math","abs","calculateSwipeColor","maxSwipeDistance","swipeRatio","min","red","round","green","blue","alpha","children","id","isOpen","onClose","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","onMenuToggle","setIsOpen","style","index","transform","onTouchStart","onTouchMove","onTouchEnd","background","exercises","exerciseIndex","userCommentIndex","place","initials","attendeeIndex","_c","$RefreshReg$"],"sources":["/Users/unne/Documents/GitHub/Coachapp/src/views/MySessions.js"],"sourcesContent":["import React, {useState, useEffect, useContext, useRef} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport \"../styles/mySessions.css\";\nimport MenuContext from \"../context/MenuContext.js\";\nimport Header from '../components/Header';\nimport Menu from '../components/Menu';\nimport {jwtDecode} from \"jwt-decode\"; \nimport Modal from \"../components/Modal\"\nimport Loader from \"../components/Loader\"\n\nexport default function MySessions() {\n    const [isLoading, setIsLoading] = useState(true)\n    const [isModalOpen, setIsModalOpen] = useState(false)\n    const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false)\n    const [currentExercise, setCurrentExercise] = useState('');\n    const modalRef = useRef();\n    const hamburgerRef = useRef(null);\n    const [allSessions, setAllSessions] = useState([]);\n    const [userUpcomingSessions, setUserUpcomingSessions] = useState([]);\n    const [userPastSessions, setUserPastSessions] = useState([]);\n    const [allUpcomingSessions, setAllUpcomingSessions] = useState([]);\n    const [allPastSessions, setAllPastSessions] = useState([]);\n    const [role, setRole] = useState(0);\n    const [user, setUser] = useState({});\n    const [email, setEmail]= useState(\"\");\n    const [expandedContent, setExpandedContent] = useState(null);\n    const { toggleMenu, isMenuOpen, setIsMenuOpen } = useContext(MenuContext);\n    const [comment, setComment] = useState(\"\")\n    const [currentSessionId, setCurrentSessionId] = useState(\"\")\n    const sessionSwipeRefs = useRef([]);\n    const [touchStartX, setTouchStartX] = useState(0);\n    const [touchEndX, setTouchEndX] = useState(0);\n    const [sessionXValues, setSessionXValues] = useState({});\n    const [sessionToRemoveId, setSessionToRemoveId] = useState('');\n\n   \n\n  \n \n\n    const openModal = (session, exercise) => {\n        setCurrentSessionId(session._id); \n        setCurrentExercise(exercise);\n        setIsModalOpen(true);\n      };\n      const openDeleteModal = (sessionId) => {\n        setSessionToRemoveId(sessionId);\n        setIsDeleteModalOpen(true);\n    };\n   \n      const closeModal = () => {\n        setIsModalOpen(false);\n      };\n      const closeDeleteModal = () => {\n        setIsDeleteModalOpen(false);\n      };\n\n      const handleComment = (e) => {\n        setComment(e.target.value)\n      }\n\n      const getSessions = async () => {\n        setIsLoading(true);\n        const token = localStorage.getItem(\"token\");\n        const decodedToken = jwtDecode(token);\n        setRole(decodedToken.role);\n        setUser({ name: decodedToken.name, lastname: decodedToken.lastname });\n        console.log(decodedToken.email);\n    \n        if (token) {\n            try {\n                const response = await fetch(\"http://192.168.0.36:5000/get-sessions\", {\n                    method: \"GET\",\n                    headers: {\n                        Authorization: `Bearer ${token}`,\n                    },\n                });\n                const data = await response.json();\n                const sessions = data.sessions;\n                const currentDate = new Date().toISOString().slice(0, 10);\n    \n                // Sortera alla sessioner baserat på tid och datum\n                const sortedSessions = sessions.sort((a, b) => {\n                    const dateA = new Date(`${a.date}T${a.time}`);\n                    const dateB = new Date(`${b.date}T${b.time}`);\n                    return dateA - dateB;\n                });\n    \n                setAllSessions(sortedSessions);\n    \n                if (role >= 2000) {\n                    setAllUpcomingSessions(sortedSessions.filter(session => session.date >= currentDate));\n                    setAllPastSessions(sortedSessions.filter(session => session.date < currentDate));\n                } else {\n                    const userSessions = sortedSessions.filter(session => session.attendees.map(attendee => attendee.email).includes(decodedToken.email));\n                    console.log(\"userSessions\", userSessions)\n                    setUserUpcomingSessions(userSessions.filter(session => session.date >= currentDate));\n                    setUserPastSessions(userSessions.filter(session => session.date < currentDate));\n                    setAllUpcomingSessions(sortedSessions.filter(session => session.date >= currentDate));\n                    setAllPastSessions(sortedSessions.filter(session => session.date < currentDate));\n                }\n            } catch (err) {\n                console.error(\"Couldn't get sessions\", err);\n            } finally {\n                setIsLoading(false);\n            }\n        }\n    };\n    \n\n    useEffect(() => {\n        getSessions();\n    }, [role]);\n\n    const postComment = async () => {\n        const token = localStorage.getItem(\"token\");\n        try {\n          const response = await fetch(`http://192.168.0.36:5000/add-comment/${currentSessionId}/${currentExercise._id}`, {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${token}`,\n            },\n            body: JSON.stringify({\n              userComment: comment,\n              author: user.name[0] + user.lastname[0]\n            }),\n          });\n\n          setComment(\"\")\n          closeModal()\n      \n          console.log(response)\n        \n          if (response.ok) {\n            console.log(\"Kommentaren postades framgångsrikt!\");\n            getSessions();\n          } else {\n            console.error(\"Något gick fel när du försökte posta kommentaren.\");\n          }\n        } catch (error) {\n          console.error(\"Ett fel uppstod vid hantering av kommentaren:\", error);\n        }\n      };\n\n\n      const deleteSession = async () => {\n        const token = localStorage.getItem(\"token\");\n        try {\n            const response = await fetch(`http://192.168.0.36:5000/delete-session/${sessionToRemoveId}`, {\n                method: \"DELETE\",\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n    \n            if (response.ok) {\n                console.log(\"Passet har tagits bort framgångsrikt!\");\n                // Uppdatera sessions efter borttagning\n                getSessions();\n                setIsDeleteModalOpen(false);\n            } else {\n                console.error(\"Något gick fel när du försökte ta bort passet.\");\n            }\n        } catch (error) {\n            console.error(\"Ett fel uppstod vid hantering av borttagning av passet:\", error);\n        }\n    };\n      \n    const isAnyContentExpanded = () => {\n        console.log(allSessions.some(session => isContentExpanded(session)))\n        return allSessions.some(session => isContentExpanded(session));\n    };\n\n    const toggleExpandContent = (session) => {\n        setExpandedContent(prevContent => prevContent === session ? null : session);\n    };\n\n    const isContentExpanded = (session) => {\n        return expandedContent === session;\n    };\n\n    const getDayOfWeek = (dateString) => {\n        const days = ['Söndag', 'Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag'];\n        const date = new Date(dateString);\n        return days[date.getDay()];\n    };\n\n\n    const handleTouchStart = (sessionId, e) => {\n        if(role >= 2000) {\n        setTouchStartX(e.touches[0].clientX);\n    }\n    };\n    \n    const handleTouchMove = (sessionId, e) => {\n        if (role >= 2000) {\n            if (!isAnyContentExpanded(sessionId)) {\n                const deltaX = e.touches[0].clientX - touchStartX;\n    \n                if (deltaX < 0) {\n                    setSessionXValues(prevValues => ({\n                        ...prevValues,\n                        [sessionId]: deltaX,\n                    }));\n                }\n            }\n        }\n    };\n    \n    const handleTouchEnd = (sessionId) => {\n        if (role >= 2000) {\n            if (!isAnyContentExpanded(sessionId)) {\n                const deltaX = sessionXValues[sessionId] || 0;\n                if (Math.abs(deltaX) > 200) {\n                    openDeleteModal(sessionId);\n                }\n    \n                setSessionXValues(prevValues => ({\n                    ...prevValues,\n                    [sessionId]: 0,\n                }));\n            }\n        }\n    };\n\n    const calculateSwipeColor = (sessionId) => {\n        const deltaX = sessionXValues[sessionId] || 0;\n        const maxSwipeDistance = 200; \n        const swipeRatio = Math.min(Math.abs(deltaX) / maxSwipeDistance, 1); // Andel av maximalt avstånd\n        const red = Math.round(255 * swipeRatio);\n        const green = 0; \n        const blue = 0; \n        const alpha = 1; \n        \n\n        if (Math.abs(deltaX) <= 100) {\n            return 'linear-gradient(to bottom right, rgb(235, 233, 233) 50%, rgb(4, 52, 85))'\n        } else{\n        return `rgba(${red}, ${green}, ${blue}, ${alpha})`\n    }\n    };\n\n    return (\n        <div>\n                    <div id=\"modal-root\">\n          <Modal isOpen={isModalOpen} onClose={closeModal}>\n            <div className=\"modal-wrapper\">\n              <div className=\"modal-header\">\n                <h2 className=\"modal-h2\">{currentExercise.name}</h2>\n              </div>\n\n                 <div className=\"modal-content\">\n                    <input type=\"text\"\n                    className=\"input-name\"\n                         onChange={handleComment}\n                             value={comment}\n                             placeholder=\"Skriv kommentar\">\n                     </input>\n                </div>\n                \n\n              <div className=\"modal-buttons\">\n                <button className=\"modal-button\" onClick={postComment}>Kommentera</button>\n              </div>\n            </div>\n          </Modal>\n        </div>\n\n\n        <div id=\"modal-root\">\n          <Modal isOpen={isDeleteModalOpen} onClose={closeDeleteModal}>\n            <div className=\"modal-wrapper\">\n              <div className=\"modal-header\">\n                  <h2>Är du säker på att du vill ta bort passet?</h2>\n              </div>\n\n                 <div className=\"modal-content\">\n                </div>\n                \n\n              <div className=\"modal-buttons\">\n                <button className=\"modal-delete-button\" onClick={deleteSession}>Ta bort</button>\n              </div>\n            </div>\n          </Modal>\n        </div>\n\n\n            <Header onMenuToggle={toggleMenu} hamburgerRef={hamburgerRef} />\n            <Menu isOpen={isMenuOpen} setIsOpen={setIsMenuOpen} hamburgerRef={hamburgerRef} />\n\n         \n            <div className=\"home-wrapper\" style={{ filter: isMenuOpen ? \"blur(4px) brightness(40%)\" : \"blur(0) brightness(100%)\" }}>\n                <h1 className=\"view-header\">Mina pass</h1>\n\n                <div  className=\"sessions-wrapper\" >\n                    <div className=\"sessions-header\">\n                        <h2>Kommande pass</h2>\n                    </div>\n                    {role >= 2000 ? (\n                        allUpcomingSessions.map((session, index) => (\n                            <div\n                            className={\"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\")}\n                            style={{\n                                transform: `translateX(${sessionXValues[session._id]}px)`,\n                            }}\n                            onClick={() => toggleExpandContent(session)}\n                            onTouchStart={(e) => handleTouchStart(session._id, e)}\n                            onTouchMove={(e) => handleTouchMove(session._id, e)}\n                            onTouchEnd={() => handleTouchEnd(session._id)}// Uppdatera sessionens position baserat på sessionX\n                        >   \n                                <div className=\"sessions-content\" style={{ background: calculateSwipeColor(session._id)}}>\n                                    <div className=\"session-top\">\n                                        <h2> {getDayOfWeek(session.date)} {session.date} {session.time}</h2>\n                                    </div>\n\n                                    \n                                    {isContentExpanded(session) && (\n                                <div className=\"expanded-session-content\">\n                                    {session.exercises.map((exercise, exerciseIndex) => (\n                                    <div className=\"exercise-item\" key={exerciseIndex}>\n                                        <h3 id=\"exercise-name\" onClick={ (e) => openModal(session, exercise)}>{exercise.name}</h3>\n                                        {exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => (\n                                        <p key={userCommentIndex} id=\"exercise-comment\">{userComment.author}: {userComment.comment}</p>\n                                        ))}\n                                    </div>\n                                    ))}\n                                </div>\n                                )}\n\n                                    <div className=\"session-bottom\">\n                                        <h2>{session.place}</h2>\n                                        <div className=\"session-initials\">\n                                            {session.attendees.map((initials, attendeeIndex) => (\n                                                <span key={attendeeIndex} className=\"initials-wrapper\">\n                                                    <h3 id=\"initials\">{initials.name[0] + initials.lastname[0]}</h3>\n                                                </span>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    ) : (\n                        userUpcomingSessions.map((session, index) => (\n                            <div className={\"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\")} key={index}  onClick={() => toggleExpandContent(session)}> \n                                <div className=\"sessions-content\">\n                                    <div className=\"session-top\">\n                                        <h2> {getDayOfWeek(session.date)} {session.date} {session.time}</h2>\n                                    </div>\n\n                                    {isContentExpanded(session) && (\n                                <div className=\"expanded-session-content\">\n                                    {session.exercises.map((exercise, exerciseIndex) => (\n                                    <div className=\"exercise-item\" key={exerciseIndex}>\n                                        <h3 id=\"exercise-name\" onClick={ (e) => openModal(session, exercise)}>{exercise.name}</h3>\n                                        <p id=\"exercise-comment\">{exercise.comment}</p>\n                                        {exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => (\n                                        <p key={userCommentIndex} id=\"exercise-comment\">{userComment.author}: {userComment.comment}</p>\n                                        ))}\n                                    </div>\n                                    ))}\n                                </div>\n                                )}\n\n                                    <div className=\"session-bottom\">\n                                        <h2>{session.place}</h2>\n                                        <div className=\"session-initials\">\n                                            {session.attendees.map((initials, attendeeIndex) => (\n                                                <span key={attendeeIndex} className=\"initials-wrapper\">\n                                                    <h3 id=\"initials\">{initials.name[0] + initials.lastname[0]}</h3>\n                                                </span>\n                                            ))}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    )}\n                </div>\n\n                <div className=\"sessions-wrapper\">\n    <div className=\"sessions-header\">\n        <h2>Tidigare pass</h2>\n    </div>\n    {role >= 2000 ? (\n        allPastSessions.map((session, index) => (\n            <div className={\"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\")} key={index}  onClick={() => toggleExpandContent(session)}> \n                <div className=\"sessions-content\">\n                    <div className=\"session-top\">\n                        <h2> {getDayOfWeek(session.date)} {session.date} {session.time}</h2>\n                    </div>\n\n                    {isContentExpanded(session) && (\n                                <div className=\"expanded-session-content\">\n                                    {session.exercises.map((exercise, exerciseIndex) => (\n                                    <div className=\"exercise-item\" key={exerciseIndex}>\n                                        <h3 id=\"exercise-name\" onClick={ (e) => openModal(session, exercise)}>{exercise.name}</h3>\n                                        <p id=\"exercise-comment\">{exercise.comment}</p>\n                                        {exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => (\n                                        <p key={userCommentIndex} id=\"exercise-comment\">{userComment.author}: {userComment.comment}</p>\n                                        ))}\n                                    </div>\n                                    ))}\n                                </div>\n                                )}\n\n                    <div className=\"session-bottom\">\n                        <h2>{session.place}</h2>\n                        <div className=\"session-initials\">\n                            {session.attendees.map((initials, attendeeIndex) => (\n                                <span key={attendeeIndex} className=\"initials-wrapper\">\n                                    <h3 id=\"initials\">{initials.name[0] + initials.lastname[0]}</h3>\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ))\n    ) : (\n        userPastSessions.map((session, index) => (\n            <div className={\"sessions-expandable\" + (isContentExpanded(session) ? \" expanded\" : \"\")} key={index}  onClick={() => toggleExpandContent(session)}> \n                <div className=\"sessions-content\">\n                    <div className=\"session-top\">\n                        <h2> {getDayOfWeek(session.date)} {session.date} {session.time}</h2>\n                    </div>\n\n                    {isContentExpanded(session) && (\n                                <div className=\"expanded-session-content\">\n                                    {session.exercises.map((exercise, exerciseIndex) => (\n                                    <div className=\"exercise-item\" key={exerciseIndex}>\n                                        <h3 id=\"exercise-name\" onClick={ (e) => openModal(session, exercise)}>{exercise.name}</h3>\n                                        <p id=\"exercise-comment\">{exercise.comment}</p>\n                                        {exercise.userComment && exercise.userComment.map((userComment, userCommentIndex) => (\n                                        <p key={userCommentIndex} id=\"exercise-comment\">{userComment.author}: {userComment.comment}</p>\n                                        ))}\n                                    </div>\n                                    ))}\n                                </div>\n                                )}\n\n                    <div className=\"session-bottom\">\n                        <h2>{session.place}</h2>\n                        <div className=\"session-initials\">\n                            {session.attendees.map((initials, attendeeIndex) => (\n                                <span key={attendeeIndex} className=\"initials-wrapper\">\n                                    <h3 id=\"initials\">{initials.name[0] + initials.lastname[0]}</h3>\n                                </span>\n                            ))}\n                        </div>\n                    </div>\n                    \n                </div>\n            \n            </div>\n            \n        ))\n    )}\n  \n</div>\n\n\n\n\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAO,OAAO;AACpE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,0BAA0B;AACjC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,SAAQC,SAAS,QAAO,YAAY;AACpC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACqB,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMuB,QAAQ,GAAGpB,MAAM,CAAC,CAAC;EACzB,MAAMqB,YAAY,GAAGrB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC2B,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAAC+B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAClE,MAAM,CAACiC,eAAe,EAAEC,kBAAkB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmC,IAAI,EAAEC,OAAO,CAAC,GAAGpC,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACqC,IAAI,EAAEC,OAAO,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACuC,KAAK,EAAEC,QAAQ,CAAC,GAAExC,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACyC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM;IAAE2C,UAAU;IAAEC,UAAU;IAAEC;EAAc,CAAC,GAAG3C,UAAU,CAACG,WAAW,CAAC;EACzE,MAAM,CAACyC,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgD,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAMkD,gBAAgB,GAAG/C,MAAM,CAAC,EAAE,CAAC;EACnC,MAAM,CAACgD,WAAW,EAAEC,cAAc,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACqD,SAAS,EAAEC,YAAY,CAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACuD,cAAc,EAAEC,iBAAiB,CAAC,GAAGxD,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxD,MAAM,CAACyD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAO9D,MAAM2D,SAAS,GAAGA,CAACC,OAAO,EAAEC,QAAQ,KAAK;IACrCZ,mBAAmB,CAACW,OAAO,CAACE,GAAG,CAAC;IAChCxC,kBAAkB,CAACuC,QAAQ,CAAC;IAC5B3C,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EACD,MAAM6C,eAAe,GAAIC,SAAS,IAAK;IACrCN,oBAAoB,CAACM,SAAS,CAAC;IAC/B5C,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAEC,MAAM6C,UAAU,GAAGA,CAAA,KAAM;IACvB/C,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EACD,MAAMgD,gBAAgB,GAAGA,CAAA,KAAM;IAC7B9C,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAM+C,aAAa,GAAIC,CAAC,IAAK;IAC3BrB,UAAU,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9BvD,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMwD,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,YAAY,GAAGnE,SAAS,CAACgE,KAAK,CAAC;IACrCpC,OAAO,CAACuC,YAAY,CAACxC,IAAI,CAAC;IAC1BG,OAAO,CAAC;MAAEsC,IAAI,EAAED,YAAY,CAACC,IAAI;MAAEC,QAAQ,EAAEF,YAAY,CAACE;IAAS,CAAC,CAAC;IACrEC,OAAO,CAACC,GAAG,CAACJ,YAAY,CAACpC,KAAK,CAAC;IAE/B,IAAIiC,KAAK,EAAE;MACP,IAAI;QACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UAClEC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACLC,aAAa,EAAG,UAASZ,KAAM;UACnC;QACJ,CAAC,CAAC;QACF,MAAMa,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC,MAAMC,QAAQ,GAAGF,IAAI,CAACE,QAAQ;QAC9B,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;QAEzD;QACA,MAAMC,cAAc,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;UAC3C,MAAMC,KAAK,GAAG,IAAIP,IAAI,CAAE,GAAEK,CAAC,CAACG,IAAK,IAAGH,CAAC,CAACI,IAAK,EAAC,CAAC;UAC7C,MAAMC,KAAK,GAAG,IAAIV,IAAI,CAAE,GAAEM,CAAC,CAACE,IAAK,IAAGF,CAAC,CAACG,IAAK,EAAC,CAAC;UAC7C,OAAOF,KAAK,GAAGG,KAAK;QACxB,CAAC,CAAC;QAEFzE,cAAc,CAACkE,cAAc,CAAC;QAE9B,IAAIzD,IAAI,IAAI,IAAI,EAAE;UACdH,sBAAsB,CAAC4D,cAAc,CAACQ,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAACqC,IAAI,IAAIT,WAAW,CAAC,CAAC;UACrFtD,kBAAkB,CAAC0D,cAAc,CAACQ,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAACqC,IAAI,GAAGT,WAAW,CAAC,CAAC;QACpF,CAAC,MAAM;UACH,MAAMa,YAAY,GAAGT,cAAc,CAACQ,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAAC0C,SAAS,CAACC,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACjE,KAAK,CAAC,CAACkE,QAAQ,CAAC9B,YAAY,CAACpC,KAAK,CAAC,CAAC;UACrIuC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEsB,YAAY,CAAC;UACzCzE,uBAAuB,CAACyE,YAAY,CAACD,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAACqC,IAAI,IAAIT,WAAW,CAAC,CAAC;UACpF1D,mBAAmB,CAACuE,YAAY,CAACD,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAACqC,IAAI,GAAGT,WAAW,CAAC,CAAC;UAC/ExD,sBAAsB,CAAC4D,cAAc,CAACQ,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAACqC,IAAI,IAAIT,WAAW,CAAC,CAAC;UACrFtD,kBAAkB,CAAC0D,cAAc,CAACQ,MAAM,CAACxC,OAAO,IAAIA,OAAO,CAACqC,IAAI,GAAGT,WAAW,CAAC,CAAC;QACpF;MACJ,CAAC,CAAC,OAAOkB,GAAG,EAAE;QACV5B,OAAO,CAAC6B,KAAK,CAAC,uBAAuB,EAAED,GAAG,CAAC;MAC/C,CAAC,SAAS;QACN1F,YAAY,CAAC,KAAK,CAAC;MACvB;IACJ;EACJ,CAAC;EAGDf,SAAS,CAAC,MAAM;IACZsE,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACpC,IAAI,CAAC,CAAC;EAEV,MAAMyE,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,MAAMpC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAuCjC,gBAAiB,IAAG3B,eAAe,CAACyC,GAAI,EAAC,EAAE;QAC9GoB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClCC,aAAa,EAAG,UAASZ,KAAM;QACjC,CAAC;QACDqC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,WAAW,EAAElE,OAAO;UACpBmE,MAAM,EAAE5E,IAAI,CAACuC,IAAI,CAAC,CAAC,CAAC,GAAGvC,IAAI,CAACwC,QAAQ,CAAC,CAAC;QACxC,CAAC;MACH,CAAC,CAAC;MAEF9B,UAAU,CAAC,EAAE,CAAC;MACdkB,UAAU,CAAC,CAAC;MAEZa,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MAErB,IAAIA,QAAQ,CAACkC,EAAE,EAAE;QACfpC,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QAClDR,WAAW,CAAC,CAAC;MACf,CAAC,MAAM;QACLO,OAAO,CAAC6B,KAAK,CAAC,mDAAmD,CAAC;MACpE;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd7B,OAAO,CAAC6B,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE;EACF,CAAC;EAGD,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAM3C,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CxB,iBAAkB,EAAC,EAAE;QACzFyB,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;UACLC,aAAa,EAAG,UAASZ,KAAM;QACnC;MACJ,CAAC,CAAC;MAEF,IAAIQ,QAAQ,CAACkC,EAAE,EAAE;QACbpC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpD;QACAR,WAAW,CAAC,CAAC;QACbnD,oBAAoB,CAAC,KAAK,CAAC;MAC/B,CAAC,MAAM;QACH0D,OAAO,CAAC6B,KAAK,CAAC,gDAAgD,CAAC;MACnE;IACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZ7B,OAAO,CAAC6B,KAAK,CAAC,yDAAyD,EAAEA,KAAK,CAAC;IACnF;EACJ,CAAC;EAED,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IAC/BtC,OAAO,CAACC,GAAG,CAACtD,WAAW,CAAC4F,IAAI,CAACzD,OAAO,IAAI0D,iBAAiB,CAAC1D,OAAO,CAAC,CAAC,CAAC;IACpE,OAAOnC,WAAW,CAAC4F,IAAI,CAACzD,OAAO,IAAI0D,iBAAiB,CAAC1D,OAAO,CAAC,CAAC;EAClE,CAAC;EAED,MAAM2D,mBAAmB,GAAI3D,OAAO,IAAK;IACrClB,kBAAkB,CAAC8E,WAAW,IAAIA,WAAW,KAAK5D,OAAO,GAAG,IAAI,GAAGA,OAAO,CAAC;EAC/E,CAAC;EAED,MAAM0D,iBAAiB,GAAI1D,OAAO,IAAK;IACnC,OAAOnB,eAAe,KAAKmB,OAAO;EACtC,CAAC;EAED,MAAM6D,YAAY,GAAIC,UAAU,IAAK;IACjC,MAAMC,IAAI,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,CAAC;IACpF,MAAM1B,IAAI,GAAG,IAAIR,IAAI,CAACiC,UAAU,CAAC;IACjC,OAAOC,IAAI,CAAC1B,IAAI,CAAC2B,MAAM,CAAC,CAAC,CAAC;EAC9B,CAAC;EAGD,MAAMC,gBAAgB,GAAGA,CAAC7D,SAAS,EAAEI,CAAC,KAAK;IACvC,IAAGjC,IAAI,IAAI,IAAI,EAAE;MACjBiB,cAAc,CAACgB,CAAC,CAAC0D,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC;IACxC;EACA,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAChE,SAAS,EAAEI,CAAC,KAAK;IACtC,IAAIjC,IAAI,IAAI,IAAI,EAAE;MACd,IAAI,CAACiF,oBAAoB,CAACpD,SAAS,CAAC,EAAE;QAClC,MAAMiE,MAAM,GAAG7D,CAAC,CAAC0D,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,GAAG5E,WAAW;QAEjD,IAAI8E,MAAM,GAAG,CAAC,EAAE;UACZzE,iBAAiB,CAAC0E,UAAU,KAAK;YAC7B,GAAGA,UAAU;YACb,CAAClE,SAAS,GAAGiE;UACjB,CAAC,CAAC,CAAC;QACP;MACJ;IACJ;EACJ,CAAC;EAED,MAAME,cAAc,GAAInE,SAAS,IAAK;IAClC,IAAI7B,IAAI,IAAI,IAAI,EAAE;MACd,IAAI,CAACiF,oBAAoB,CAACpD,SAAS,CAAC,EAAE;QAClC,MAAMiE,MAAM,GAAG1E,cAAc,CAACS,SAAS,CAAC,IAAI,CAAC;QAC7C,IAAIoE,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAC,GAAG,GAAG,EAAE;UACxBlE,eAAe,CAACC,SAAS,CAAC;QAC9B;QAEAR,iBAAiB,CAAC0E,UAAU,KAAK;UAC7B,GAAGA,UAAU;UACb,CAAClE,SAAS,GAAG;QACjB,CAAC,CAAC,CAAC;MACP;IACJ;EACJ,CAAC;EAED,MAAMsE,mBAAmB,GAAItE,SAAS,IAAK;IACvC,MAAMiE,MAAM,GAAG1E,cAAc,CAACS,SAAS,CAAC,IAAI,CAAC;IAC7C,MAAMuE,gBAAgB,GAAG,GAAG;IAC5B,MAAMC,UAAU,GAAGJ,IAAI,CAACK,GAAG,CAACL,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAC,GAAGM,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;IACrE,MAAMG,GAAG,GAAGN,IAAI,CAACO,KAAK,CAAC,GAAG,GAAGH,UAAU,CAAC;IACxC,MAAMI,KAAK,GAAG,CAAC;IACf,MAAMC,IAAI,GAAG,CAAC;IACd,MAAMC,KAAK,GAAG,CAAC;IAGf,IAAIV,IAAI,CAACC,GAAG,CAACJ,MAAM,CAAC,IAAI,GAAG,EAAE;MACzB,OAAO,0EAA0E;IACrF,CAAC,MAAK;MACN,OAAQ,QAAOS,GAAI,KAAIE,KAAM,KAAIC,IAAK,KAAIC,KAAM,GAAE;IACtD;EACA,CAAC;EAED,oBACIlI,OAAA;IAAAmI,QAAA,gBACYnI,OAAA;MAAKoI,EAAE,EAAC,YAAY;MAAAD,QAAA,eAC9BnI,OAAA,CAACH,KAAK;QAACwI,MAAM,EAAEhI,WAAY;QAACiI,OAAO,EAAEjF,UAAW;QAAA8E,QAAA,eAC9CnI,OAAA;UAAKuI,SAAS,EAAC,eAAe;UAAAJ,QAAA,gBAC5BnI,OAAA;YAAKuI,SAAS,EAAC,cAAc;YAAAJ,QAAA,eAC3BnI,OAAA;cAAIuI,SAAS,EAAC,UAAU;cAAAJ,QAAA,EAAE1H,eAAe,CAACuD;YAAI;cAAAwE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eAEH3I,OAAA;YAAKuI,SAAS,EAAC,eAAe;YAAAJ,QAAA,eAC3BnI,OAAA;cAAO4I,IAAI,EAAC,MAAM;cAClBL,SAAS,EAAC,YAAY;cACjBM,QAAQ,EAAEtF,aAAc;cACpBG,KAAK,EAAExB,OAAQ;cACf4G,WAAW,EAAC;YAAiB;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC9B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC,eAGR3I,OAAA;YAAKuI,SAAS,EAAC,eAAe;YAAAJ,QAAA,eAC5BnI,OAAA;cAAQuI,SAAS,EAAC,cAAc;cAACQ,OAAO,EAAE/C,WAAY;cAAAmC,QAAA,EAAC;YAAU;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGN3I,OAAA;MAAKoI,EAAE,EAAC,YAAY;MAAAD,QAAA,eAClBnI,OAAA,CAACH,KAAK;QAACwI,MAAM,EAAE9H,iBAAkB;QAAC+H,OAAO,EAAEhF,gBAAiB;QAAA6E,QAAA,eAC1DnI,OAAA;UAAKuI,SAAS,EAAC,eAAe;UAAAJ,QAAA,gBAC5BnI,OAAA;YAAKuI,SAAS,EAAC,cAAc;YAAAJ,QAAA,eACzBnI,OAAA;cAAAmI,QAAA,EAAI;YAA0C;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eAEH3I,OAAA;YAAKuI,SAAS,EAAC;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,eAGR3I,OAAA;YAAKuI,SAAS,EAAC,eAAe;YAAAJ,QAAA,eAC5BnI,OAAA;cAAQuI,SAAS,EAAC,qBAAqB;cAACQ,OAAO,EAAExC,aAAc;cAAA4B,QAAA,EAAC;YAAO;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGF3I,OAAA,CAACN,MAAM;MAACsJ,YAAY,EAAEjH,UAAW;MAACnB,YAAY,EAAEA;IAAa;MAAA4H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChE3I,OAAA,CAACL,IAAI;MAAC0I,MAAM,EAAErG,UAAW;MAACiH,SAAS,EAAEhH,aAAc;MAACrB,YAAY,EAAEA;IAAa;MAAA4H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlF3I,OAAA;MAAKuI,SAAS,EAAC,cAAc;MAACW,KAAK,EAAE;QAAE1D,MAAM,EAAExD,UAAU,GAAG,2BAA2B,GAAG;MAA2B,CAAE;MAAAmG,QAAA,gBACnHnI,OAAA;QAAIuI,SAAS,EAAC,aAAa;QAAAJ,QAAA,EAAC;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1C3I,OAAA;QAAMuI,SAAS,EAAC,kBAAkB;QAAAJ,QAAA,gBAC9BnI,OAAA;UAAKuI,SAAS,EAAC,iBAAiB;UAAAJ,QAAA,eAC5BnI,OAAA;YAAAmI,QAAA,EAAI;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,EACLpH,IAAI,IAAI,IAAI,GACTJ,mBAAmB,CAACwE,GAAG,CAAC,CAAC3C,OAAO,EAAEmG,KAAK,kBACnCnJ,OAAA;UACAuI,SAAS,EAAE,qBAAqB,IAAI7B,iBAAiB,CAAC1D,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,CAAE;UACnFkG,KAAK,EAAE;YACHE,SAAS,EAAG,cAAazG,cAAc,CAACK,OAAO,CAACE,GAAG,CAAE;UACzD,CAAE;UACF6F,OAAO,EAAEA,CAAA,KAAMpC,mBAAmB,CAAC3D,OAAO,CAAE;UAC5CqG,YAAY,EAAG7F,CAAC,IAAKyD,gBAAgB,CAACjE,OAAO,CAACE,GAAG,EAAEM,CAAC,CAAE;UACtD8F,WAAW,EAAG9F,CAAC,IAAK4D,eAAe,CAACpE,OAAO,CAACE,GAAG,EAAEM,CAAC,CAAE;UACpD+F,UAAU,EAAEA,CAAA,KAAMhC,cAAc,CAACvE,OAAO,CAACE,GAAG,CAAE;UAAA;UAAAiF,QAAA,eAE1CnI,OAAA;YAAKuI,SAAS,EAAC,kBAAkB;YAACW,KAAK,EAAE;cAAEM,UAAU,EAAE9B,mBAAmB,CAAC1E,OAAO,CAACE,GAAG;YAAC,CAAE;YAAAiF,QAAA,gBACrFnI,OAAA;cAAKuI,SAAS,EAAC,aAAa;cAAAJ,QAAA,eACxBnI,OAAA;gBAAAmI,QAAA,GAAI,GAAC,EAACtB,YAAY,CAAC7D,OAAO,CAACqC,IAAI,CAAC,EAAC,GAAC,EAACrC,OAAO,CAACqC,IAAI,EAAC,GAAC,EAACrC,OAAO,CAACsC,IAAI;cAAA;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,EAGLjC,iBAAiB,CAAC1D,OAAO,CAAC,iBAC/BhD,OAAA;cAAKuI,SAAS,EAAC,0BAA0B;cAAAJ,QAAA,EACpCnF,OAAO,CAACyG,SAAS,CAAC9D,GAAG,CAAC,CAAC1C,QAAQ,EAAEyG,aAAa,kBAC/C1J,OAAA;gBAAKuI,SAAS,EAAC,eAAe;gBAAAJ,QAAA,gBAC1BnI,OAAA;kBAAIoI,EAAE,EAAC,eAAe;kBAACW,OAAO,EAAIvF,CAAC,IAAKT,SAAS,CAACC,OAAO,EAAEC,QAAQ,CAAE;kBAAAkF,QAAA,EAAElF,QAAQ,CAACe;gBAAI;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EACzF1F,QAAQ,CAACmD,WAAW,IAAInD,QAAQ,CAACmD,WAAW,CAACT,GAAG,CAAC,CAACS,WAAW,EAAEuD,gBAAgB,kBAChF3J,OAAA;kBAA0BoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,GAAE/B,WAAW,CAACC,MAAM,EAAC,IAAE,EAACD,WAAW,CAAClE,OAAO;gBAAA,GAAlFyH,gBAAgB;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAsE,CAC7F,CAAC;cAAA,GAJ8Be,aAAa;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAK5C,CACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACJ,eAEG3I,OAAA;cAAKuI,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,gBAC3BnI,OAAA;gBAAAmI,QAAA,EAAKnF,OAAO,CAAC4G;cAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxB3I,OAAA;gBAAKuI,SAAS,EAAC,kBAAkB;gBAAAJ,QAAA,EAC5BnF,OAAO,CAAC0C,SAAS,CAACC,GAAG,CAAC,CAACkE,QAAQ,EAAEC,aAAa,kBAC3C9J,OAAA;kBAA0BuI,SAAS,EAAC,kBAAkB;kBAAAJ,QAAA,eAClDnI,OAAA;oBAAIoI,EAAE,EAAC,UAAU;oBAAAD,QAAA,EAAE0B,QAAQ,CAAC7F,IAAI,CAAC,CAAC,CAAC,GAAG6F,QAAQ,CAAC5F,QAAQ,CAAC,CAAC;kBAAC;oBAAAuE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC,GADzDmB,aAAa;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAElB,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,CAAC,GAEF5H,oBAAoB,CAAC4E,GAAG,CAAC,CAAC3C,OAAO,EAAEmG,KAAK,kBACpCnJ,OAAA;UAAKuI,SAAS,EAAE,qBAAqB,IAAI7B,iBAAiB,CAAC1D,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,CAAE;UAAc+F,OAAO,EAAEA,CAAA,KAAMpC,mBAAmB,CAAC3D,OAAO,CAAE;UAAAmF,QAAA,eAC9InI,OAAA;YAAKuI,SAAS,EAAC,kBAAkB;YAAAJ,QAAA,gBAC7BnI,OAAA;cAAKuI,SAAS,EAAC,aAAa;cAAAJ,QAAA,eACxBnI,OAAA;gBAAAmI,QAAA,GAAI,GAAC,EAACtB,YAAY,CAAC7D,OAAO,CAACqC,IAAI,CAAC,EAAC,GAAC,EAACrC,OAAO,CAACqC,IAAI,EAAC,GAAC,EAACrC,OAAO,CAACsC,IAAI;cAAA;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,EAELjC,iBAAiB,CAAC1D,OAAO,CAAC,iBAC/BhD,OAAA;cAAKuI,SAAS,EAAC,0BAA0B;cAAAJ,QAAA,EACpCnF,OAAO,CAACyG,SAAS,CAAC9D,GAAG,CAAC,CAAC1C,QAAQ,EAAEyG,aAAa,kBAC/C1J,OAAA;gBAAKuI,SAAS,EAAC,eAAe;gBAAAJ,QAAA,gBAC1BnI,OAAA;kBAAIoI,EAAE,EAAC,eAAe;kBAACW,OAAO,EAAIvF,CAAC,IAAKT,SAAS,CAACC,OAAO,EAAEC,QAAQ,CAAE;kBAAAkF,QAAA,EAAElF,QAAQ,CAACe;gBAAI;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1F3I,OAAA;kBAAGoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,EAAElF,QAAQ,CAACf;gBAAO;kBAAAsG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EAC9C1F,QAAQ,CAACmD,WAAW,IAAInD,QAAQ,CAACmD,WAAW,CAACT,GAAG,CAAC,CAACS,WAAW,EAAEuD,gBAAgB,kBAChF3J,OAAA;kBAA0BoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,GAAE/B,WAAW,CAACC,MAAM,EAAC,IAAE,EAACD,WAAW,CAAClE,OAAO;gBAAA,GAAlFyH,gBAAgB;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAsE,CAC7F,CAAC;cAAA,GAL8Be,aAAa;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAM5C,CACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACJ,eAEG3I,OAAA;cAAKuI,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,gBAC3BnI,OAAA;gBAAAmI,QAAA,EAAKnF,OAAO,CAAC4G;cAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxB3I,OAAA;gBAAKuI,SAAS,EAAC,kBAAkB;gBAAAJ,QAAA,EAC5BnF,OAAO,CAAC0C,SAAS,CAACC,GAAG,CAAC,CAACkE,QAAQ,EAAEC,aAAa,kBAC3C9J,OAAA;kBAA0BuI,SAAS,EAAC,kBAAkB;kBAAAJ,QAAA,eAClDnI,OAAA;oBAAIoI,EAAE,EAAC,UAAU;oBAAAD,QAAA,EAAE0B,QAAQ,CAAC7F,IAAI,CAAC,CAAC,CAAC,GAAG6F,QAAQ,CAAC5F,QAAQ,CAAC,CAAC;kBAAC;oBAAAuE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC,GADzDmB,aAAa;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAElB,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC,GA9BoFQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+B9F,CACR,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN3I,OAAA;QAAKuI,SAAS,EAAC,kBAAkB;QAAAJ,QAAA,gBAC7CnI,OAAA;UAAKuI,SAAS,EAAC,iBAAiB;UAAAJ,QAAA,eAC5BnI,OAAA;YAAAmI,QAAA,EAAI;UAAa;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CAAC,EACLpH,IAAI,IAAI,IAAI,GACTF,eAAe,CAACsE,GAAG,CAAC,CAAC3C,OAAO,EAAEmG,KAAK,kBAC/BnJ,OAAA;UAAKuI,SAAS,EAAE,qBAAqB,IAAI7B,iBAAiB,CAAC1D,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,CAAE;UAAc+F,OAAO,EAAEA,CAAA,KAAMpC,mBAAmB,CAAC3D,OAAO,CAAE;UAAAmF,QAAA,eAC9InI,OAAA;YAAKuI,SAAS,EAAC,kBAAkB;YAAAJ,QAAA,gBAC7BnI,OAAA;cAAKuI,SAAS,EAAC,aAAa;cAAAJ,QAAA,eACxBnI,OAAA;gBAAAmI,QAAA,GAAI,GAAC,EAACtB,YAAY,CAAC7D,OAAO,CAACqC,IAAI,CAAC,EAAC,GAAC,EAACrC,OAAO,CAACqC,IAAI,EAAC,GAAC,EAACrC,OAAO,CAACsC,IAAI;cAAA;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,EAELjC,iBAAiB,CAAC1D,OAAO,CAAC,iBACfhD,OAAA;cAAKuI,SAAS,EAAC,0BAA0B;cAAAJ,QAAA,EACpCnF,OAAO,CAACyG,SAAS,CAAC9D,GAAG,CAAC,CAAC1C,QAAQ,EAAEyG,aAAa,kBAC/C1J,OAAA;gBAAKuI,SAAS,EAAC,eAAe;gBAAAJ,QAAA,gBAC1BnI,OAAA;kBAAIoI,EAAE,EAAC,eAAe;kBAACW,OAAO,EAAIvF,CAAC,IAAKT,SAAS,CAACC,OAAO,EAAEC,QAAQ,CAAE;kBAAAkF,QAAA,EAAElF,QAAQ,CAACe;gBAAI;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1F3I,OAAA;kBAAGoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,EAAElF,QAAQ,CAACf;gBAAO;kBAAAsG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EAC9C1F,QAAQ,CAACmD,WAAW,IAAInD,QAAQ,CAACmD,WAAW,CAACT,GAAG,CAAC,CAACS,WAAW,EAAEuD,gBAAgB,kBAChF3J,OAAA;kBAA0BoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,GAAE/B,WAAW,CAACC,MAAM,EAAC,IAAE,EAACD,WAAW,CAAClE,OAAO;gBAAA,GAAlFyH,gBAAgB;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAsE,CAC7F,CAAC;cAAA,GAL8Be,aAAa;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAM5C,CACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACJ,eAEb3I,OAAA;cAAKuI,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,gBAC3BnI,OAAA;gBAAAmI,QAAA,EAAKnF,OAAO,CAAC4G;cAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxB3I,OAAA;gBAAKuI,SAAS,EAAC,kBAAkB;gBAAAJ,QAAA,EAC5BnF,OAAO,CAAC0C,SAAS,CAACC,GAAG,CAAC,CAACkE,QAAQ,EAAEC,aAAa,kBAC3C9J,OAAA;kBAA0BuI,SAAS,EAAC,kBAAkB;kBAAAJ,QAAA,eAClDnI,OAAA;oBAAIoI,EAAE,EAAC,UAAU;oBAAAD,QAAA,EAAE0B,QAAQ,CAAC7F,IAAI,CAAC,CAAC,CAAC,GAAG6F,QAAQ,CAAC5F,QAAQ,CAAC,CAAC;kBAAC;oBAAAuE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC,GADzDmB,aAAa;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAElB,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC,GA9BoFQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA+B9F,CACR,CAAC,GAEF1H,gBAAgB,CAAC0E,GAAG,CAAC,CAAC3C,OAAO,EAAEmG,KAAK,kBAChCnJ,OAAA;UAAKuI,SAAS,EAAE,qBAAqB,IAAI7B,iBAAiB,CAAC1D,OAAO,CAAC,GAAG,WAAW,GAAG,EAAE,CAAE;UAAc+F,OAAO,EAAEA,CAAA,KAAMpC,mBAAmB,CAAC3D,OAAO,CAAE;UAAAmF,QAAA,eAC9InI,OAAA;YAAKuI,SAAS,EAAC,kBAAkB;YAAAJ,QAAA,gBAC7BnI,OAAA;cAAKuI,SAAS,EAAC,aAAa;cAAAJ,QAAA,eACxBnI,OAAA;gBAAAmI,QAAA,GAAI,GAAC,EAACtB,YAAY,CAAC7D,OAAO,CAACqC,IAAI,CAAC,EAAC,GAAC,EAACrC,OAAO,CAACqC,IAAI,EAAC,GAAC,EAACrC,OAAO,CAACsC,IAAI;cAAA;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnE,CAAC,EAELjC,iBAAiB,CAAC1D,OAAO,CAAC,iBACfhD,OAAA;cAAKuI,SAAS,EAAC,0BAA0B;cAAAJ,QAAA,EACpCnF,OAAO,CAACyG,SAAS,CAAC9D,GAAG,CAAC,CAAC1C,QAAQ,EAAEyG,aAAa,kBAC/C1J,OAAA;gBAAKuI,SAAS,EAAC,eAAe;gBAAAJ,QAAA,gBAC1BnI,OAAA;kBAAIoI,EAAE,EAAC,eAAe;kBAACW,OAAO,EAAIvF,CAAC,IAAKT,SAAS,CAACC,OAAO,EAAEC,QAAQ,CAAE;kBAAAkF,QAAA,EAAElF,QAAQ,CAACe;gBAAI;kBAAAwE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC1F3I,OAAA;kBAAGoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,EAAElF,QAAQ,CAACf;gBAAO;kBAAAsG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EAC9C1F,QAAQ,CAACmD,WAAW,IAAInD,QAAQ,CAACmD,WAAW,CAACT,GAAG,CAAC,CAACS,WAAW,EAAEuD,gBAAgB,kBAChF3J,OAAA;kBAA0BoI,EAAE,EAAC,kBAAkB;kBAAAD,QAAA,GAAE/B,WAAW,CAACC,MAAM,EAAC,IAAE,EAACD,WAAW,CAAClE,OAAO;gBAAA,GAAlFyH,gBAAgB;kBAAAnB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAsE,CAC7F,CAAC;cAAA,GAL8Be,aAAa;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAM5C,CACJ;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACD,CACJ,eAEb3I,OAAA;cAAKuI,SAAS,EAAC,gBAAgB;cAAAJ,QAAA,gBAC3BnI,OAAA;gBAAAmI,QAAA,EAAKnF,OAAO,CAAC4G;cAAK;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxB3I,OAAA;gBAAKuI,SAAS,EAAC,kBAAkB;gBAAAJ,QAAA,EAC5BnF,OAAO,CAAC0C,SAAS,CAACC,GAAG,CAAC,CAACkE,QAAQ,EAAEC,aAAa,kBAC3C9J,OAAA;kBAA0BuI,SAAS,EAAC,kBAAkB;kBAAAJ,QAAA,eAClDnI,OAAA;oBAAIoI,EAAE,EAAC,UAAU;oBAAAD,QAAA,EAAE0B,QAAQ,CAAC7F,IAAI,CAAC,CAAC,CAAC,GAAG6F,QAAQ,CAAC5F,QAAQ,CAAC,CAAC;kBAAC;oBAAAuE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK;gBAAC,GADzDmB,aAAa;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAElB,CACT;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEL;QAAC,GA/BoFQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiC9F,CAER,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzI,EAAA,CA3cuBD,UAAU;AAAA8J,EAAA,GAAV9J,UAAU;AAAA,IAAA8J,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}