{"ast":null,"code":"var _jsxFileName = \"/Users/unne/Documents/GitHub/Coachapp/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = ({\n  sessionDate,\n  sessionTime\n}) => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = '19c737dffbd944c5114401ce4fb6d57a';\n  console.log(sessionDate);\n  console.log(sessionTime);\n  console.log(\"user location\", userLocation);\n  console.log(\"v√§derdata\", weatherData);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      console.log(userLocation);\n      try {\n        if (!userLocation) return;\n        const {\n          latitude,\n          longitude\n        } = userLocation;\n\n        // Skapa ett datumobjekt med sessionDate och sessionTime\n        const sessionDateTime = new Date(`${sessionDate}T${sessionTime}`);\n        const sessionTimestamp = Math.round(sessionDateTime.getTime() / 1000);\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&dt=${sessionTimestamp}&appid=${API_KEY}`);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(data);\n          console.log(\"data\", data);\n          setWeatherData(data);\n        } else {\n          console.error(\"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    if (userLocation) {\n      fetchWeatherData();\n    }\n  }, [userLocation]);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      });\n    }\n  }, []);\n  const getWeatherEmoji = () => {\n    if (!weatherData || !weatherData.weather || weatherData.weather.length === 0) {\n      return \"\";\n    }\n    const weather = weatherData.weather[0].main.toLowerCase();\n    console.log(weather);\n    switch (weather) {\n      case \"clear\":\n        return \"‚òÄÔ∏è\";\n      case \"clouds\":\n        return \"‚òÅÔ∏è\";\n      case \"rain\":\n        return \"üåßÔ∏è\";\n      case \"snow\":\n        return \"‚ùÑÔ∏è\";\n      default:\n        return \"\";\n    }\n  };\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Laddar v\\xE4der...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [getWeatherEmoji(), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"iZ/HrBjKBnycehLQN+graYNsBSY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Weather","sessionDate","sessionTime","_s","userLocation","setUserLocation","weatherData","setWeatherData","API_KEY","console","log","fetchWeatherData","latitude","longitude","sessionDateTime","Date","sessionTimestamp","Math","round","getTime","response","fetch","ok","data","json","error","navigator","geolocation","getCurrentPosition","position","coords","getWeatherEmoji","weather","length","main","toLowerCase","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/unne/Documents/GitHub/Coachapp/src/components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Weather = ({sessionDate, sessionTime}) => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = '19c737dffbd944c5114401ce4fb6d57a';\n\n  console.log(sessionDate)\n  console.log(sessionTime)\n\n\nconsole.log(\"user location\",userLocation)\n  console.log(\"v√§derdata\",weatherData)\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n        console.log(userLocation)\n      try {\n \n        if (!userLocation) return;\n        \n        const { latitude, longitude } = userLocation;\n     \n        \n        // Skapa ett datumobjekt med sessionDate och sessionTime\n        const sessionDateTime = new Date(`${sessionDate}T${sessionTime}`);\n        const sessionTimestamp = Math.round(sessionDateTime.getTime() / 1000);\n  \n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&dt=${sessionTimestamp}&appid=${API_KEY}`\n        );\n  \n        if (response.ok) {\n            const data = await response.json();\n        console.log(data)\n          console.log(\"data\",data)\n          setWeatherData(data);\n        } else {\n          console.error(\"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n\n    if (userLocation) {\n      fetchWeatherData();\n    }\n  }, [userLocation]);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      });\n    }\n  }, []);\n\n  const getWeatherEmoji = () => {\n    if (!weatherData || !weatherData.weather || weatherData.weather.length === 0) {\n      return \"\";\n    }\n\n    const weather = weatherData.weather[0].main.toLowerCase();\n    console.log(weather)\n    switch (weather) {\n      case \"clear\":\n        return \"‚òÄÔ∏è\";\n      case \"clouds\":\n        return \"‚òÅÔ∏è\";\n      case \"rain\":\n        return \"üåßÔ∏è\";\n      case \"snow\":\n        return \"‚ùÑÔ∏è\";\n      default:\n        return \"\";\n   \n    }\n  };\n\n  if (!weatherData) {\n    return <p>Laddar v√§der...</p>;\n  }\n\n  return (\n    <div>\n      <p>{getWeatherEmoji()} </p>\n\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}