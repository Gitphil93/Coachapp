{"ast":null,"code":"var _jsxFileName = \"/Users/unne/Documents/GitHub/Coachapp/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = ({\n  sessionDate,\n  sessionTime\n}) => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = '19c737dffbd944c5114401ce4fb6d57a';\n  console.log(userLocation);\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        if (!userLocation) {\n          userLocation = {\n            latitude: 57.708870,\n            longitude: 11.974560\n          };\n        }\n        ;\n        const {\n          latitude,\n          longitude\n        } = userLocation;\n        const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`);\n        if (response.ok) {\n          const data = await response.json();\n          setWeatherData(data);\n        } else {\n          console.error(\"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n    if (userLocation) {\n      fetchWeatherData();\n    }\n  }, [userLocation]);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude\n        });\n      });\n    }\n  }, []);\n  const getWeatherEmoji = weather => {\n    switch (weather) {\n      case \"Clear\":\n        return \"‚òÄÔ∏è\";\n      case \"Clouds\":\n        return \"‚òÅÔ∏è\";\n      case \"Rain\":\n        return \"üåßÔ∏è\";\n      case \"Snow\":\n        return \"‚ùÑÔ∏è\";\n      default:\n        return \"\";\n    }\n  };\n  if (!weatherData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Laddar v\\xE4der...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Hitta det n√§rmaste v√§derdataobjektet i listan\n  const closestWeatherData = weatherData.list.reduce((closest, current) => {\n    const closestTimeDiff = Math.abs(new Date(closest.dt_txt) - new Date(`${sessionDate}T${sessionTime}`));\n    const currentTimeDiff = Math.abs(new Date(current.dt_txt) - new Date(`${sessionDate}T${sessionTime}`));\n    return currentTimeDiff < closestTimeDiff ? current : closest;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [getWeatherEmoji(closestWeatherData.weather[0].main), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, closestWeatherData.dt, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"iZ/HrBjKBnycehLQN+graYNsBSY=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Weather","sessionDate","sessionTime","_s","userLocation","setUserLocation","weatherData","setWeatherData","API_KEY","console","log","fetchWeatherData","latitude","longitude","response","fetch","ok","data","json","error","navigator","geolocation","getCurrentPosition","position","coords","getWeatherEmoji","weather","children","fileName","_jsxFileName","lineNumber","columnNumber","closestWeatherData","list","reduce","closest","current","closestTimeDiff","Math","abs","Date","dt_txt","currentTimeDiff","main","dt","_c","$RefreshReg$"],"sources":["/Users/unne/Documents/GitHub/Coachapp/src/components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst Weather = ({ sessionDate, sessionTime }) => {\n  const [userLocation, setUserLocation] = useState(null);\n  const [weatherData, setWeatherData] = useState(null);\n  const API_KEY = '19c737dffbd944c5114401ce4fb6d57a';\n  console.log(userLocation)\n\n  useEffect(() => {\n    const fetchWeatherData = async () => {\n      try {\n        if (!userLocation) {\n            userLocation = {latitude:57.708870, longitude: 11.974560}\n        };\n        \n        const { latitude, longitude } = userLocation;\n  \n        const response = await fetch(\n          `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\n        );\n  \n        if (response.ok) {\n          const data = await response.json();\n          setWeatherData(data);\n        } else {\n          console.error(\"Failed to fetch weather data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching weather data:\", error);\n      }\n    };\n\n    if (userLocation) {\n      fetchWeatherData();\n    }\n  }, [userLocation]);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setUserLocation({\n          latitude: position.coords.latitude,\n          longitude: position.coords.longitude,\n        });\n      });\n    }\n  }, []);\n\n  const getWeatherEmoji = (weather) => {\n    switch (weather) {\n      case \"Clear\":\n        return \"‚òÄÔ∏è\";\n      case \"Clouds\":\n        return \"‚òÅÔ∏è\";\n      case \"Rain\":\n        return \"üåßÔ∏è\";\n      case \"Snow\":\n        return \"‚ùÑÔ∏è\";\n      default:\n        return \"\";\n    }\n  };\n\n  if (!weatherData) {\n    return <p>Laddar v√§der...</p>;\n  }\n\n  // Hitta det n√§rmaste v√§derdataobjektet i listan\n  const closestWeatherData = weatherData.list.reduce((closest, current) => {\n    const closestTimeDiff = Math.abs(new Date(closest.dt_txt) - new Date(`${sessionDate}T${sessionTime}`));\n    const currentTimeDiff = Math.abs(new Date(current.dt_txt) - new Date(`${sessionDate}T${sessionTime}`));\n\n    return currentTimeDiff < closestTimeDiff ? current : closest;\n  });\n\n  return (\n    <div>\n      <div key={closestWeatherData.dt}>\n        <p>{getWeatherEmoji(closestWeatherData.weather[0].main)} </p>\n        {/* Add more weather information as needed */}\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}